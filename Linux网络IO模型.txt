Linux网络IO模型

https://my.oschina.net/u/2939155/blog/906516
用户空间 | 内核空间 |
缓冲区	 | 缓冲器   |磁盘控制器--磁盘
进程




操作系统的核心是内核，独立于普通的应用程序，可以访问受保护的内存空间，也有访问底层硬件设备的所有权限。
为了保证用户进程不能直接操作内核，保证内核的安全，操作系统将虚拟空间划分为两个部分，
一个部分为内核空间，一部分为用户空间。

网络IO的本质就是socket的读取，
socket在linux系统被抽象为流，
IO可以理解为对流的操作。

对于一次IO访问（以read为例）
数据会先被拷贝到操作系统内核的缓冲区，
然后才会从操作系统内核的缓冲区拷贝到应用程序的地址空间中。

经历两个阶段：
第一个阶段：等待数据准备
第二个阶段：将数据从内核拷贝到进程中


对于socket流而言：

第一步：通常涉及等待网络上的数据分组到达，然后复制到内核的某个缓冲区。
第二步：把数据从内核缓冲区复制到应用进程缓冲区。

当然，如果内核空间的缓冲区中已经有数据了，那么就可以省略第一步。
至于为什么不能直接让磁盘控制器把数据送到应用程序的地址空间中呢？最简单的一个原因就是应用程序不能直接操作底层硬件。



网络应用需要处理的无非就是两大类问题，
网络IO，数据计算。相对于后者，网络IO的延迟，给应用带来的性能瓶颈大于后者。


基本概念再认识
同步/异步/阻塞/非阻塞

五种IO模型
阻塞IO模型/非阻塞IO模型/IO复用模型/信号驱动IO模型/异步IO模型


